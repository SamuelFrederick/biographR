% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clean_columns.R
\name{clean_columns}
\alias{clean_columns}
\title{Clean a series of columns using ChatGPT by mapping data into new categories and formats}
\usage{
clean_columns(
  data,
  column_values,
  column_formats,
  openai_api_key = NULL,
  openai_model = "gpt-3.5-turbo",
  openai_temperature = 0
)
}
\arguments{
\item{data}{The data to be processed}

\item{column_values}{A named list with column names from data as names and values as vectors with the desired categories for the corresponding column}

\item{column_formats}{A named list with column names from data as names and values as strings with the desired format for the corresponding column}

\item{openai_api_key}{API key for OpenAI, a string. If this is NULL, clean_columns() searches .Renviron for API key.}

\item{openai_model}{ChatGPT model to use, defaults to "chatgpt-3.5-turbo"}

\item{openai_temperature}{Specifies the amount of randomness in ChatGPT, a number between 0 and 2 with more randomness for higher numbers, defaults to 0}
}
\value{
Data with new columns for each entry in column_values containing new mappings
}
\description{
Maps old data in names of column_values to new categories and formats using ChatGPT.
clean_columns() returns data with new columns corresponding to mapped values.
This can be helpful for processing messy or unstructured text data
in a column (e.g., open-ended survey responses, names, etc.). clean_columns()
is particularly helpful for post-processing the output of \code{\link[=get_bio]{get_bio()}}.
}
\examples{
df <- data.frame(age = rnorm(4, 50, 10),
                 education = c("BA", "B.A.", "High School", "MBA"),
                 name = c("Wardell Stephen Curry II", "Michael J Jordan",
                 "James, LEBRON", "Shaq"))
clean_columns(data = df,
              column_values = list(education = c("High School", "College",
                                                 "Graduate School"),
                                   name = c("Steph Curry", "Michael Jordan",
                                            "LeBron James", "Shaquille O'Neal")))

clean_columns(data = data.frame(birthday = c("08-13-1923",
                                             "05/15/1976",
                                             "March 13, 1998",
                                             "19th of March in 1994")),
              column_formats = list(birthday = "{MM}/{DD}/{YYYY}"))
}
